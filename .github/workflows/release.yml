name: Update and Publish Addon

on:
  schedule:
    - cron: '0 12,0 * * *'  # Runs daily at 6am & 6pm CST
  workflow_dispatch:  # Allow manual triggering as well
    inputs:
      release_type:
        description: "Release type (release, beta, alpha)"
        required: true
        default: "release"
      changelog:
        description: "Changelog for the release"
        required: true

env:
  MAJOR_VERSION: 0
  MINOR_VERSION: 3
  GAME_VERSION_ID: 6952
  REDIS_URL: ${{ secrets.REDIS_URL }}
  REDIS_TOKEN: ${{ secrets.REDIS_TOKEN }}
  CF_API_KEY: ${{ secrets.CF_API_KEY }}

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install upstash-redis

      - name: Fetch and Update Data File
        run: |
          python3 scripts/update_data.py
        continue-on-error: false

      - name: Install Lua and luarocks
        run: |
          sudo apt-get update
          sudo apt-get install -y lua5.1 luarocks

      - name: Install luacheck
        run: |
          sudo luarocks install luacheck

      - name: Validate Addon Files
        run: |
          luacheck src -g

      - name: Generate Version and Date
        id: version
        run: |
          DATE=$(date +'%Y%m%d')
          VERSION="${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.$DATE"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "CHANGELOG=Database Refresh ${{ env.DATE }}" >> $GITHUB_ENV
          elif [[ -z "${{ github.event.inputs.changelog }}" ]]; then
            echo "Missing changelog for manual release!" && exit 1
          else
            echo "CHANGELOG=${{ github.event.inputs.changelog }}" >> $GITHUB_ENV
          fi

      - name: Zip Addon Files
        run: |
          cd src
          zip -r DungeonHonor.${{ env.VERSION }}.zip .
        working-directory: ${{ github.workspace }}

      - name: Debug CurseForge Variables
        run: |
          echo "API Key: [REDACTED]"
          echo "Project ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}"
          echo "File Path: ${{ github.workspace }}/DungeonHonor.${{ env.VERSION }}.zip"
          echo "Changelog: ${{ env.CHANGELOG }}"
          echo "Game Version ID: ${{ env.GAME_VERSION_ID }}"
          echo "Release Type: ${{ github.event.inputs.release_type }}"
          echo "Version: ${{ env.VERSION }}"
          echo "All variables are set correctly."

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: DungeonHonor
          path: ${{ github.workspace }}/DungeonHonor.${{ env.VERSION }}.zip

      # - name: Upload to CurseForge
      #   env:
      #     CURSEFORGE_API_KEY: ${{ secrets.CF_API_KEY }}
      #     CURSEFORGE_PROJECT_ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}
      #     FILE_PATH: ${{ github.workspace }}/DungeonHonor.${{ env.VERSION }}.zip
      #     CHANGELOG: ${{ env.CHANGELOG }}
      #     GAME_VERSION_ID: ${{ env.GAME_VERSION_ID }}
      #     RELEASE_TYPE: ${{ github.event.inputs.release_type || 'release' }}
      #     VERSION: ${{ env.VERSION }}
      #   run: |
      #     python upload_to_curseforge.py
